{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/components/profile.js"],"names":["Typography","Text","BlogIndex","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_components_bio__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_7__","type","justify","align","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","className","antd__WEBPACK_IMPORTED_MODULE_8__","style","margin","_components_profile__WEBPACK_IMPORTED_MODULE_5__","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","headerFontFamily","bodyFontFamily","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","Title","Layout","header","_this$props","children","pathname","react__WEBPACK_IMPORTED_MODULE_2___default","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","boxShadow","textDecoration","color","breadcrumbs","split","nav","filter","elem","map","page","i","url","crumb","charAt","toUpperCase","slice","join","length","antd__WEBPACK_IMPORTED_MODULE_6__","Item","Fragment","marginLeft","marginRight","maxWidth","padding","textAlign","Date","getFullYear","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Bio","_public_static_d_3583473817_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","display","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","Profile","href","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-index-js-f99589ee58de8a53c939.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Profile from '../components/profile';\n\nimport { Divider, Typography, Icon, Row, Col } from 'antd';\nimport 'antd/dist/antd.css';\nimport './style.css';\n\nconst { Text } = Typography;\n\nclass BlogIndex extends Component {\n\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title='Home' />\n        <Bio />\n\n        <Row type='flex' justify='start' align='middle'>\n          <Link to='/about' className='links'>About</Link>\n          <Icon type='arrow-left' style={{ margin: '1em'}} />\n          Find out more about me.\n        </Row>\n\n        <Row type='flex' justify='end' align='middle'>\n        Check out some of the things I'm currently working on.\n          <Icon type='arrow-right' style={{ margin: '1em'}} />\n          <Link to='/projects' className='links'>Projects</Link>\n        </Row>\n\n        <Row type='flex' justify='start' align='middle'>\n          <Link to='/posts' className='links'>Posts</Link>\n          <Icon type='arrow-left' style={{ margin: '1em'}} />\n          Blog posts stuff im doing\n        </Row>\n        <Profile />\n\n\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\n\nconst typography = new Typography({\n  headerFontFamily: [\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'PingFang SC',\n    'Hiragino Sans GB',\n    'Microsoft YaHei',\n    'Helvetica Neue',\n    'Helvetica',\n    'Arial',\n    'sans-serif',\n    'Apple Color Emoji',\n    'Segoe UI Emoji',\n    'Segoe UI Symbol'\n  ],\n  bodyFontFamily: [\n    '-apple-system',\n    'BlinkMacSystemFont',\n    'Segoe UI',\n    'PingFang SC',\n    'Hiragino Sans GB',\n    'Microsoft YaHei',\n    'Helvetica Neue',\n    'Helvetica',\n    'Arial',\n    'sans-serif',\n    'Apple Color Emoji',\n    'Segoe UI Emoji',\n    'Segoe UI Symbol'\n  ]\n});\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react';\nimport { Link } from 'gatsby';\nimport { rhythm, scale } from '../utils/typography';\nimport { Breadcrumb, Typography, Icon, Divider } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst { Title } = Typography;\n\nclass Layout extends Component {\n\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      let breadcrumbs = location.pathname.split('/');\n      breadcrumbs = breadcrumbs.filter((elem) => elem !== '');\n\n      // fixed nested links at some point\n      const nav = breadcrumbs.map((page, i) => {\n        let url = `/${page}`;\n\n        let crumb = page.split('-')\n          .map((elem) => elem.charAt(0).toUpperCase() + elem.slice(1))\n          .join(' ');\n\n        if (i === breadcrumbs.length - 1) {\n          return (<Breadcrumb.Item>{ crumb }</Breadcrumb.Item>);\n        }\n        return (<Breadcrumb.Item>\n          <Link to={url}>{ crumb }</Link>\n        </Breadcrumb.Item>);\n      });\n\n      header = (\n        <>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <Link to='/'><Icon type='home' />{' '}Home</Link>\n          </Breadcrumb.Item>\n          { nav }\n        </Breadcrumb>\n        <Divider />\n        </>\n      );\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n        }}\n      >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer style={{textAlign: 'center'}}>\n        © {new Date().getFullYear()} Christopher Shen\n      </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Hi! I'm <strong>{author}</strong>. This entire site is currently\n        under construction. Things are a bit messy right now, but\n        I'm working on fixing that. Stay tuned.\n        {` `}\n        {/*\n        <a href={`https://twitter.com/${social.twitter}`}>\n          You should follow him on Twitter\n        </a>\n        */}\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React, { Component } from 'react';\nimport { Icon, Divider } from 'antd';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div style={{ textAlign: 'center', margin: '1em' }}>\n        <a href='https://github.com/csshen' className='icon-link'>\n          <Icon type='github' className='icon-up' />\n        </a>\n        <Divider type='vertical' />\n        <a href='https://www.instagram.com/chrissshen/' className='icon-link'>\n          <Icon type='instagram' className='icon-up' />\n        </a>\n        <Divider type='vertical' />\n        <a href='https://www.youtube.com/user/CrateNinja/videos' className='icon-link'>\n          <Icon type='youtube' className='icon-up' />\n        </a>\n        <Divider type='vertical' />\n        <a href='https://www.linkedin.com/in/christopher-shen-aa780912b/' className='icon-link'>\n          <Icon type='linkedin' className='icon-up' />\n        </a>\n        <Divider type='vertical' />\n        <a href='mailto:chrisshen8@gmail.com' className='icon-link'>\n          <Icon type='mail' className='icon-up' />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n"],"sourceRoot":""}