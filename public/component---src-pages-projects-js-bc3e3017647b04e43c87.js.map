{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/styles/projects.module.scss"],"names":["Projects","location","data","siteTitle","site","siteMetadata","title","posts","mdx","edges","pathname","className","style","grid","map","node","frontmatter","date","description","featured","textcolor","x","fluid","childImageSharp","aspectRatio","ps","image","default","to","fields","slug","tile","overlay","color","pageQuery","module","exports"],"mappings":"8/BAyCeA,UAjCE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACtBC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,IAAIC,MACvB,OACE,kBAAC,IAAD,CAASR,SAAUA,EAASS,SAAUJ,MAAOH,GAC3C,kBAAC,IAAD,CAAKG,MAAM,aACX,yBAAKK,UAAWC,IAAMC,MAElBN,EAAMO,KAAI,YAAa,IAAXC,EAAU,EAAVA,KAAU,EACsCA,EAAKC,YAAvDV,EADY,EACZA,MAAOW,EADK,EACLA,KAAMC,EADD,EACCA,YAAaC,EADd,EACcA,SAAUC,EADxB,EACwBA,UACxCC,EAAI,KAMR,OAJEA,EADEF,EACE,kBAAC,IAAD,CAAKG,MAAK,KAAOH,EAASI,gBAAgBD,MAAhC,CAAuCE,YAAa,IAAIb,UAAWc,IAAGC,QAEhF,kBAAC,IAAD,CAAKJ,MAAK,KAAOpB,EAAKyB,QAAQJ,gBAAgBD,MAApC,CAA2CE,YAAa,IAAIb,UAAWc,IAAGC,QAGxF,kBAAC,IAAD,CAAME,GAAI,SAASb,EAAKc,OAAOC,KAAMnB,UAAWc,IAAGM,MACjD,yBAAKpB,UAAWc,IAAGO,QAASpB,MAAO,CAACqB,MAAOb,GAAa,UACtD,gCAASd,GAAe,6BACvBY,EAAY,6BACZD,GAEHI,SAYT,IAAMa,EAAS,c,uBC1CtBC,EAAOC,QAAU,CAAC,KAAO,+BAA+B,MAAQ,gCAAgC,QAAU","file":"component---src-pages-projects-js-bc3e3017647b04e43c87.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport SLayout from '../components/slayout';\nimport SEO from '../components/seo';\nimport Img from 'gatsby-image';\nimport style from '../styles/photo-gallery.module.scss';\nimport ps from '../styles/projects.module.scss';\n\nconst Projects = ({ location, data }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.mdx.edges;\n  return (\n    <SLayout location={location.pathname} title={siteTitle}>\n      <SEO title='Projects' />\n      <div className={style.grid}>\n        {\n          posts.map(({node}) => {\n            const { title, date, description, featured, textcolor } = node.frontmatter;\n            let x = null;\n            if (featured) {\n              x = <Img fluid={{ ...featured.childImageSharp.fluid, aspectRatio: 1}} className={ps.image}/>;\n            } else {\n              x = <Img fluid={{ ...data.default.childImageSharp.fluid, aspectRatio: 1}} className={ps.image}/>;\n            }\n            return (\n              <Link to={'/posts'+node.fields.slug} className={ps.tile}>\n                <div className={ps.overlay} style={{color: textcolor || 'black'}}>\n                  <strong>{title}</strong><br/>\n                  {description}<br/>\n                  {date}\n                </div>\n              { x }\n              </Link>\n            );\n          })\n        }\n      </div>\n    </SLayout>\n  );\n}\n\nexport default Projects;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: \"project\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            description\n            textcolor\n            featured {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    default: file(sourceInstanceName: {eq: \"assets\"}, relativePath: {eq: \"default.jpg\"}) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"projects-module--tile--3UwiH\",\"image\":\"projects-module--image--26Xts\",\"overlay\":\"projects-module--overlay--3fj8J\"};"],"sourceRoot":""}